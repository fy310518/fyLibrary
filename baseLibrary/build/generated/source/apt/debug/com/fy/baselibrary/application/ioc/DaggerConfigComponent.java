// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.fy.baselibrary.application.ioc;

import android.content.Context;
import dagger.internal.DoubleCheck;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DaggerConfigComponent implements ConfigComponent {
  private Provider<Context> provideContextProvider;

  private Provider<ConfigUtils.ConfigBiuder> provideCerProvider;

  private DaggerConfigComponent(Builder builder) {
    assert builder != null;
    initialize(builder);
  }

  public static Builder builder() {
    return new Builder();
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Builder builder) {

    this.provideContextProvider =
        DoubleCheck.provider(ConfigModule_ProvideContextFactory.create(builder.configModule));

    this.provideCerProvider =
        DoubleCheck.provider(ConfigModule_ProvideCerFactory.create(builder.configModule));
  }

  @Override
  public Context getContext() {
    return provideContextProvider.get();
  }

  @Override
  public ConfigUtils.ConfigBiuder getConfigBiuder() {
    return provideCerProvider.get();
  }

  public static final class Builder {
    private ConfigModule configModule;

    private Builder() {}

    public ConfigComponent build() {
      if (configModule == null) {
        throw new IllegalStateException(ConfigModule.class.getCanonicalName() + " must be set");
      }
      return new DaggerConfigComponent(this);
    }

    public Builder configModule(ConfigModule configModule) {
      this.configModule = Preconditions.checkNotNull(configModule);
      return this;
    }
  }
}
